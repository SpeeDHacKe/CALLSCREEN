@page "/Portal/{username}/{password}"
@*@layout PureLayout*@

@using System.Net;
@using System.Reflection;
@using System.Globalization;


<h4>EasyBuy Web Application Portal</h4>

<div class="row" style="margin-top: 4.2em;">
    <div class="col-md-6" style="text-align: left;">
        @*<div style="margin: 20px;">
                <img src="images/Logo-EasyBuy.png" alt="Logo EasyBuy" style="width: 82px;" />&nbsp;&nbsp;<span>CALLCENTER SCREEN SYSTEM</span>
            </div>
            <div style="margin: 20px;">
                <img src="images/Logo-EasyBuy.png" alt="Logo EasyBuy" style="width: 82px;" />&nbsp;&nbsp;<span>RL SCREEN SYSTEM</span>
            </div>*@
        @foreach (var item in menuList)
        {
            <div @key="item" style="margin: 20px;">
                <img src="images/Logo-EasyBuy.png" alt="Logo EasyBuy" style="width: 82px;" />&nbsp;&nbsp;<a href="@item.link"><span>@item.name</span></a>
            </div>
        }
    </div>
    <div class="col-md-6" style="text-align: right;">
        <img src="images/641-6415186_adventure-time-background-hd-png-download.png" alt="Alternate Text" align="bottom" style="border-width: 0px;" />
    </div>
</div>




@*<footer style="text-align:center;">
        <p>&copy;2009 EASY BUY PUBLIC Company Limited. All rights reserved.</p>
    </footer>*@



@*<style>
        .header {
            border-top: 3px solid #B51032;
            border-bottom: 1px dotted #B51032;
            height: 70px;
        }

        .title-left {
            font: 190% Arial, Helvetica, Georgia, "Times New Roman", Times, serif;
            background-color: transparent;
            float: left;
            margin-right: 2em;
            margin-top: 0.1em;
            margin-left: .8em;
        }

        .title-right {
            /*color: black;*/
            background-color: transparent;
            float: right;
            margin-right: 2em;
            margin-top: 0.8em;
            font-weight: bold;
        }

        .tableLogin {
            color: #333333;
            background-color: #F7F6F3;
            border: 1px solid #E6E2D8;
            font-family: Verdana;
            font-size: 0.8em;
            border-collapse: collapse;
        }

        .btnLogin {
            color: #284775;
            background-color: #FC6B00;
            border: 1px solid #CCCCCC;
            font-family: Verdana;
            font-size: 0.8em;
        }
    </style>*@


@code {
    public class SystemModel
    {
        public string assemName { set; get; }
        public string assemVer { set; get; }
        public string ipAddr { set; get; }
        public string dateModified { set; get; }
    }

    private class MenuModel
    {
        public string name { set; get; }
        public string link { set; get; }
    }

    private SystemModel systemModel;
    private List<MenuModel> menuList;
    [Parameter] public string username { get; set; }
    [Parameter] public string password { get; set; }
    public bool LoginSuccess = false;
    private string required = "hidden";

    protected override void OnInitialized()
    {
        this.systemModel = new SystemModel();
        var assemblyAll = Assembly.GetEntryAssembly().GetName();
        var assemblyExe = Assembly.GetExecutingAssembly();
        this.systemModel.assemName = assemblyAll.Name;
        this.systemModel.assemVer = assemblyAll.Version.ToString();
        this.systemModel.ipAddr = this.GetIPAddress();

        System.IO.FileInfo file = new System.IO.FileInfo(assemblyExe.Location);
        this.systemModel.dateModified = file.LastWriteTime.ToString("dd/MM/yyyy - HH:mm:ss");

        this.menuList = new List<MenuModel>()
    {
            new MenuModel { name = "CALLCENTER SCREEN SYSTEM", link = "http://callscreen" },
            new MenuModel { name = "RL SCREEN SYSTEM", link = "http://rlscreen" }
        };
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await JSRuntime.InvokeVoidAsync("setTitle", "EasyBuy Web Application Portal"); ;
    }

    private string GetIPAddress()
    {
        try
        {
            IPHostEntry ipHostEntry = Dns.GetHostEntry(Dns.GetHostName());
            return ipHostEntry.HostName;
        }
        catch
        {
            return "";
        }
    }

    public void Enter(KeyboardEventArgs e)
    {
        if (e.Code == "Enter" || e.Code == "NumpadEnter")
        {
            this.CheckLogin();
        }
    }

    private async Task CheckLogin()
    {
        if (!string.IsNullOrEmpty(this.username) || !string.IsNullOrEmpty(this.password))
        {
            if (this.username == "admin" && this.password == "admin")
            {
                this.LoginSuccess = true;

            }
        }
        else
        {
            this.required = "visible";
        }

        await InvokeAsync(StateHasChanged);
        await Task.CompletedTask;
        //await Task.FromResult();
    }
}
